app\:about=List versions of all Rails frameworks and the environment
app\:assets\:clean[keep]=Remove old compiled assets
app\:assets\:clobber=Remove compiled assets
app\:assets\:environment=Load asset compile environment
app\:assets\:precompile=Compile all the assets named in config.assets.precompile
app\:cache_digests\:dependencies=Lookup first-level dependencies for TEMPLATE (like messages/show or comments/_comment.html)
app\:cache_digests\:nested_dependencies=Lookup nested dependencies for TEMPLATE (like messages/show or comments/_comment.html)
app\:db\:_dump=
app\:db\:abort_if_pending_migrations=
app\:db\:charset=
app\:db\:collation=
app\:db\:create=Creates the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:create:all to create all databases in the config). Without RAILS_ENV, it defaults to creating the development and test databases.
app\:db\:create\:all=
app\:db\:drop=Drops the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:drop:all to drop all databases in the config). Without RAILS_ENV, it defaults to dropping the development and test databases.
app\:db\:drop\:all=
app\:db\:fixtures\:identify=
app\:db\:fixtures\:load=Loads fixtures into the current environment's database. Load specific fixtures using FIXTURES=x,y. Load from subdirectory in test/fixtures using FIXTURES_DIR=z. Specify an alternative path (eg. spec/fixtures) using FIXTURES_PATH=spec/fixtures.
app\:db\:forward=
app\:db\:load_config=
app\:db\:migrate=Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog).
app\:db\:migrate\:down=
app\:db\:migrate\:redo=
app\:db\:migrate\:reset=
app\:db\:migrate\:status=Display status of migrations
app\:db\:migrate\:up=
app\:db\:purge=
app\:db\:purge\:all=
app\:db\:reset=
app\:db\:rollback=Rolls the schema back to the previous version (specify steps w/ STEP=n).
app\:db\:schema\:cache\:clear=Clears a db/schema_cache.dump file.
app\:db\:schema\:cache\:dump=Creates a db/schema_cache.dump file.
app\:db\:schema\:dump=Creates a db/schema.rb file that is portable against any DB supported by Active Record
app\:db\:schema\:load=Loads a schema.rb file into the database
app\:db\:schema\:load_if_ruby=
app\:db\:seed=Loads the seed data from db/seeds.rb
app\:db\:setup=Creates the database, loads the schema, and initializes with the seed data (use db:reset to also drop the database first)
app\:db\:structure\:dump=Dumps the database structure to db/structure.sql. Specify another file with SCHEMA=db/my_structure.sql
app\:db\:structure\:load=Recreates the databases from the structure.sql file
app\:db\:structure\:load_if_sql=
app\:db\:test\:clone=
app\:db\:test\:clone_schema=
app\:db\:test\:clone_structure=
app\:db\:test\:deprecated=
app\:db\:test\:load=
app\:db\:test\:load_schema=
app\:db\:test\:load_structure=
app\:db\:test\:prepare=
app\:db\:test\:purge=
app\:db\:version=Retrieves the current schema version number
app\:default=
app\:environment=
app\:initializers=Print out all defined initializers in the order they are invoked by Rails.
app\:log\:clear=Truncates all *.log files in log/ to zero bytes (specify which logs with LOGS=test,development)
app\:middleware=Prints out your Rack middleware stack
app\:notes=Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)
app\:notes\:custom=Enumerate a custom annotation, specify with ANNOTATION=CUSTOM
app\:notes\:fixme=
app\:notes\:optimize=
app\:notes\:todo=
app\:rails\:template=Applies the template supplied by LOCATION=(/path/to/template) or URL
app\:rails\:templates\:copy=
app\:rails\:update=Update configs and some other initially generated files (or use just update:configs or update:bin)
app\:rails\:update\:bin=
app\:rails\:update\:configs=
app\:railties\:install\:migrations=
app\:restart=Restart app by touching tmp/restart.txt
app\:routes=Print out all defined routes in match order, with names. Target specific controller with CONTROLLER=x.
app\:secret=Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions).
app\:test=Runs all tests in test folder
app\:test\:controllers=
app\:test\:db=Run tests quickly, but also reset db
app\:test\:functionals=
app\:test\:generators=
app\:test\:helpers=
app\:test\:integration=
app\:test\:jobs=
app\:test\:mailers=
app\:test\:models=
app\:test\:prepare=
app\:test\:run=
app\:test\:units=
app\:time\:zones\:all=Displays all time zones, also available: time:zones:us, time:zones:local -- filter with OFFSET parameter, e.g., OFFSET=-6
app\:time\:zones\:local=
app\:time\:zones\:us=
app\:tmp\:cache\:clear=
app\:tmp\:clear=Clear cache and socket files from tmp/ (narrow w/ tmp:cache:clear, tmp:sockets:clear)
app\:tmp\:create=Creates tmp directories for cache, sockets, and pids
app\:tmp\:pids\:clear=
app\:tmp\:sockets\:clear=
app\:zt_admin\:install\:migrations=Copy migrations from zt_admin to application
build=Build zt_admin-0.1.0.gem into the pkg directory.
clobber=
clobber_rdoc=Remove RDoc HTML files
db\:create=Create the database from config/database.yml for the current Rails.env (use db:create:all to create all databases in the config)
db\:create\:all=
db\:drop=Drops the database for the current Rails.env (use db:drop:all to drop all databases)
db\:drop\:all=
db\:fixtures\:load=Load fixtures into the current environment's database.
db\:migrate=Migrate the database (options: VERSION=x, VERBOSE=false).
db\:migrate\:down=
db\:migrate\:redo=
db\:migrate\:reset=
db\:migrate\:status=Display status of migrations
db\:migrate\:up=
db\:reset=
db\:rollback=Rolls the schema back to the previous version (specify steps w/ STEP=n).
db\:schema\:dump=Create a db/schema.rb file that can be portably used against any DB supported by Active Record
db\:schema\:load=Load a schema.rb file into the database
db\:seed=Load the seed data from db/seeds.rb
db\:setup=Create the database, load the schema, and initialize with the seed data (use db:reset to also drop the db first)
db\:structure\:dump=Dump the database structure to an SQL file
db\:version=Retrieves the current schema version number
default=
environment=
install=Build and install zt_admin-0.1.0.gem into system gems.
install\:local=Build and install zt_admin-0.1.0.gem into system gems without network access.
load_app=
rdoc=Build RDoc HTML files
rdoc/created.rid=
release[remote]=Create tag v0.1.0 and build and push zt_admin-0.1.0.gem to Rubygems\nTo prevent publishing in Rubygems use `gem_push=no rake release`
release\:guard_clean=
release\:rubygem_push=
release\:source_control_push[remote]=
rerdoc=Rebuild RDoc HTML files
stats=Report code statistics (KLOCs, etc) from the application or engine
test=Run tests
tmp=
tmp/cache=
tmp/cache/assets=
tmp/cache/assets/development=
tmp/cache/assets/production=
tmp/cache/assets/test=
tmp/pids=
tmp/sockets=
